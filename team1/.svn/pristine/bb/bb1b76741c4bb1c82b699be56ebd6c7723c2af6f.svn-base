package Service;

import static util.ScannerUtil.nextInt;

import java.util.ArrayList;
import java.util.List;

import Domain.Cart;
import Domain.Order;

public class OrderService {
//	ProductService productService = new ProductService(); //경보프로덕트서비스 생성
	
//  Product ==1:1관계==> Cart
//	Cart ==다:1(카트여러개가 오더하나)==> Order
//	Order ==얘도 다대일==> Table 로 이동

	//주문번호랑 주문시간
	//주문내역
	
//	
//	Cart cart2 = new Cart(cartNo, productNo, amount);
//	///////////////////////////////////////////////////////////////////
	

	static List<Order> orders = new ArrayList<Order>();
//	static List<Cart> carts = new ArrayList<Cart>(); // 이걸 쓰면 안되고 Order안에 carts를 써야함 ==> 됐당!

	
	public static void cart() {//장바구니에 상품담기											
		Order.carts.add(new Cart(nextInt("장바구니 번호 >> "), nextInt("상품 번호 >> "), nextInt("상품 수량>> ")));
		System.out.println(Order.carts);
	}
	
	
	public static void remove() {//장바구니 삭제하기
		System.out.println(Order.carts);
		Order.carts.remove(findBy(nextInt("삭제할 장바구니 상품 순서 >> ")));
		System.out.println("삭제되었습니다.");
	}
	
	public static void display() { 
		for(Order o : orders) {
			System.out.println(o);
		}
	}
	
	public void cartHistory() { //오더에 뽑혀야할거
		//여태까지 주문했던 내역 
		int no = 1;
		long time = System.currentTimeMillis();
		orders.add(new Order(no, time, Order.carts)); 
//		System.out.println(orders);
		display();
	}
	
	
	public static void orderHistory(int index) { 
//		System.out.println(Table.getInstance().getTables().get(index).toString());
	}
	
	//↑↑↑↑↑↑↑↑↑↑↑↑↑ 승종이 Table getInstance() 주석 ↓↓↓↓↓↓↓↓↓↓↓↓↓
	
	public static void cartToOrder(int index) {
//		Table.getInstance().getTables().get(index).add(new Order()); // domain 오더에 있는 carts에 여기 있는 cart를 넣어야하는데..?
		orders.clear(); // 초기화
		System.out.println("주문완료했습니다.");
	} // 만약 각각 다른 orders 넣는다면 3차원 배열이 됩니다....

	
	private static Cart findBy(int no) { //remove findBy
		Cart carts1 = null;
		for (Cart c : Order.carts) {
			if(c.getCartNo() == no) {
				carts1 = c;
			}
		}
		return carts1;
	}
	
	
	
	public static void main(String[] args) {
		
		Cart cart = new Cart();
		//담은상품번호 상품코드 수량
		int cartNo = 1;
		int productNo = 101; //찌개 코드
		int amount = 1; //1개
		
		cart.setNo(cartNo);
		cart.setProductNo(productNo);
		cart.setAmount(amount);
		
		Order.carts.add(cart);

		// NullpointerException 떠서 주석처리해둠
//		Cart cart2 = new Cart();
//
//		int cartNo2 = 2;
//		int productNo2 = 401; //찌개 코드
//		int amount2 = 3; //1개
//		
//		cart.setNo(cartNo2);
//		cart.setProductNo(productNo2);
//		cart.setAmount(amount2);
//		
//		Order.carts.add(cart2);
//		
//		System.out.println(cart);   
		
		Order order = new Order();
		orders.add(new Order(1, System.currentTimeMillis(), Order.carts));
		
		System.out.println(order); 
		
		System.out.println(orders.size());

	}

}

