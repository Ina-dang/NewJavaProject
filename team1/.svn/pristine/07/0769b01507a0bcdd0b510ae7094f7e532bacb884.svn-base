package Service;

import Domain.Table;

import static util.ScannerUtil.nextInt;
import static util.ScannerUtil.nextLine;

import java.util.ArrayList;
import java.util.List;

public class TableService {

	private List<Table> tables = new ArrayList<Table>();
	
	// 테이블 전체 초기화
	public void tableInitAll() {
		for(int i = 1; i <= 6; i++) {
			tables.add(new Table(i));
		}
	}

	public Table findTableBy(int tableNo) {
		Table tmpTable = null;
		for(Table t : tables) {
			if(t.getTableNo() == tableNo)
				tmpTable = t;
		}
		return tmpTable;
	}
	   
	// 테이블 현황
	public void tableStatus() { // 몇번째 테이블인지
		// 뭐뭐 출력할지 생각해야함둥
		/*
		 * ===================================
		 *     1         2            3
		 * ===================================
		 * 주문개수 : findTableBy(tableNo).getOrders().size()
		 * 주르륵
		 * 주르르륵
		 * 
		 * ===================================
		 *      4         5          6
		 * ===================================
		 * 주륵
		 * 주르륵
		 * 주르르륵
		 * 
		 * ===================================
		 */
		
		
		
	}
	
	// 테이블이 주문
	public void order(int tableNo) {
		
	}

	// 테이블 고르기
	public boolean tableSelect(int tableNo) {
//		tableStatus(); 아직 안만들어놨는데 넣을거
		findTableBy(tableNo);
		if(findTableBy(tableNo).getOrders().size() == 0) {
			System.out.println("현재 사용중인 테이블 입니다.");
			return false;
		}
		else {
			System.out.println("사용 가능합니다.");
			return true;
		}
	}
	
	// 테이블 이동
	public void tableMove(int tableNo, int moveTableNo) {
		tables.set(moveTableNo - 1, findTableBy(tableNo));
		tableInit(tableNo);
	}
	
	// 테이블 결제(카드 or 현금 or 카드 + 현금 or 더치페이)
	public void tablePay(int tableNo) { // 몇번째 테이블인지
		Table table = findTableBy(tableNo);
		// 쭈루루룩
		// history에 저장
		tableInit(tableNo);
		
	}
	   
	// 테이블 하나만 초기화
	public void tableInit(int tableNo) { // 몇번째 테이블인지
		tables.remove(tableNo - 1);
		tables.add(tableNo - 1, new Table(tableNo));
	}
}