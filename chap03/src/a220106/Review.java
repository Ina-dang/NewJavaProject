package a220106;

public class Review { //연산자(Opearator)
	/*
	 * operator : 연산을 수행하는 기호
	 * operand  : 피연산자, 연산자의 작업대상(변수, 상수, 리터럴, 수식)
	 */
	
	
// 산술 > 비교 > 논리 > 대입 순
// 연산자 분류 시 형태에 따른 분류를 하기도 하지만 피연산자에 따른 분류도 하기도한다
//	단항 > 이항 > 삼항 세가지 분류
	
//	연산자 우선순위 결합 규칙 (진행방향)
	/*
	 * 대입연산자는 우변에서 좌변 
	 * 다른거는 왼쪽에서 우변으로 	
	 */
	
//	산술 형변환(casting)
	/*
	 * 피 연산자간의 타입을 일치시키려고 함
	 * 
	 * byte, short, char = 산술형 상승 됨
	 */

//	
	/*
	 * 증가 ++
	 * 감소 --
	 * 
	 * variable 만 사용 가능 
	 * (전위형)++i앞 (후위형)i++뒤 다 가능
	 * 전위형 : 연산 후 대입
	 * 후위형 : 대입 후 연산 
	 * 
	 * 두개 다 값은 변경 됨 
	 * 
	 */
	
	/*
	 * operator type (연산자의 종류) p87확인
	 * 
	 * 산술연산자 : +, -, *, /, %, <<, >>, >>> | 사칙연산, 나머지연산(%), >>들은 shift(변환)으로 비트에대한 자릿수변환 근데잘안씀
	 * 비교연산자 : >, <, >=, <=, ==, != 	   | pg에서는 == 같다 != 다르다 임 (=,≠안씀)
	 * 				
	 * 				(><의 약어는 외워두면 좋다!)
	 * 				< : lt		a < b 		a lesser than b
	 * 				> : gt		a > b 		a greater than n
	 * 
	 * 논리연산자 : &&, ||, !, &, |, ^, ~	   | &and |or !not ^caret ~
	 * 대입연산자 : =						   | 우변의 값을 좌변에 저장
	 * 기타		  : (type), ?:, instanceof 	   | 형변환연산자(casting operator), 삼항연산자, instanceof연산자
	 * 
	 */
	
	/*
	 * 단항연산자 	: 피연산자의 개수가 하나. 여기에 있는 +,-는 부호연산자 : (-3)의 -음수표시 같은 경우
	 * 이항연산자 	: 대부분 ope가 여기 포함
	 * 삼항연산자 	: ?: only
	 * 형변환연산자 : (type)
	 */
	
	/*
	 * 연산자 종류 정리
	 * 
	 * 산술 > 비교 > 논리 > 대입. 대입은 제일 마지막에 수행된다.
	 * 단항 > 이항 > 삼항. 		  단항 연산자의 우선순위가 이항연산자보다 높다.
	 * 단항 연산자와 대입 연산자를 제외한 모든 연산의 진행방향은 왼쪽에서 오른쪽이다
	 * 
	 */
	
	/*
	 *  계산 범위가 넘어가면 오버플로우 됨
	 *  a220105 (OperatorEx8)참고
	 *  Operator & p92 참고
	 */
}
